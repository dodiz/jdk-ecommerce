// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum Size {
    XS
    S
    M
    L
    XL
    XXL
}

enum Gender {
    Men
    Women
    Unisex
}

model Category {
    id          String   @id @default(cuid())
    name        String
    gender      Gender
    products    Product[]
}
model Product {
    id              String   @id @default(cuid())
    name            String
    price           Float
    category        Category @relation(fields: [categoryId], references: [id])
    categoryId      String
    combinations    Combination[]
    description     String
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
}

model Combination {
    id          String   @id @default(cuid())
    product     Product @relation(fields: [productId], references: [id])
    productId   String
    size        Size
    image       String
}

model Brand {
    id        String   @id @default(cuid())
    name      String
}

